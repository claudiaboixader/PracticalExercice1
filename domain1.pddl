(define (domain drone1)
(:requirements :strips :equality :negative-preconditions)
(:predicates (drone-location ?d)
(person-location ?p ?d)
(obstacle ?d)
(safe-zone ?d)
(adjacent ?d1 ?d2)
(rescued ?p)
(drone-empty)
)
(:action move
    :parameters (?d1 ?d2)
    :precondition (and (drone-location ?d1) (adjacent ?d1 ?d2) (not (obstacle ?d2)))
    :effect (and (drone-location ?d2) (not (drone-location ?d1)))
)
(:action pick-up
    :parameters (?p ?d)
    :precondition (and (person-location ?p ?d) (drone-location ?d) (drone-empty) (not (obstacle ?d)) (not (rescued ?p)))
    :effect (and (not (drone-empty)) (drone-location ?d) (not (person-location ?p ?d)))
)
(:action drop-off
    :parameters (?p ?d)
    :precondition (and (drone-location ?d) (safe-zone ?d) (not (drone-empty)) (not (obstacle ?d)))
    :effect (and (drone-empty) (rescued ?p))
)
)
